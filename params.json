{"name":"ng-i18next","tagline":"translation for AngularJS using i18next","body":"# ng-i18next - use i18next with Angularjs #\r\n\r\nProject goal is to provide an easy way to use [i18next](http://i18next.com/) with [AngularJS](http://angularjs.org/):\r\n\r\n- `ng-i18next` directive\r\n- `i18next` filter\r\n\r\nFirst check out the [documentation](http://i18next.com) by Jan MÃ¼hlemann.\r\n\r\n# Features #\r\n- AngularJS directive\r\n- AngularJS filter\r\n- variable binding (translates again, if variable changes)\r\n- nested translations (`$t('hello')`; see i18next documentation)\r\n- scope variables in translations (if the translation contains directives of variables like `{{hello}}`, they'll get compiled)\r\n\r\n# Usage #\r\nFirst add\r\n\r\n- AngularJS\r\n- i18next\r\n- ng-i18next\r\n\r\nto your HTML file.\r\n\r\nMake sure you require `jm.i18next` as a dependency of your AngularJS module. Also configurate the provider first:\r\n\r\n```js\r\nangular.module('jm.i18next').config(function ($i18nextProvider) {\r\n\t$i18nextProvider.options = {\r\n\t\tlng: 'de',\r\n\t\tuseCookie: false,\r\n\t\tuseLocalStorage: false,\r\n\t\tfallbackLng: 'dev',\r\n\t\tresGetPath: '../locales/__lng__/__ns__.json'\r\n\t};\r\n});\r\n```\r\n\r\nFor more options visit the [i18next documentation](http://i18next.com/pages/doc_init.html).\r\n\r\nThere are two ways to use ````ng-i18next````:\r\n\r\n## filter ##\r\n\t<p>{{'hello' | i18next}}</p>\r\n=> translates ````hello````\r\n\r\n\t<p>{{hello | i18next}}</p>\r\n=> translates ````$scope.hello````\r\n\r\n## directive ##\r\n\r\n### Basics ###\r\n\r\n\t<p ng-i18next=\"hello\"></p>\r\n=> translates ````hello````\r\n\r\n\t<p ng-i18next=\"{{hello}}\"></p>\r\n=> translates ````$scope.hello````\r\n\r\n\t<p ng-i18next>hello</p>\r\n=> translates ````hello```` (uses the content of the p-tag)\r\n\r\n\t<p ng-i18next>{{hello}}</p>\r\n=> translates ````$scope.hello```` (uses the content of the p-tag)\r\n\r\nNote, that HTML isn't compiled!\r\n\r\n### HTML ###\r\n\r\n\t<p ng-i18next=\"[html]hello\"></p>\r\n=> translates ````hello```` and compiles HTML\r\n\r\n\t<p ng-i18next=\"[html]{{hello}}\"></p>\r\n=> translates ````$scope.hello```` and compiles HTML\r\n\r\n### Attributes ###\r\n\r\n\t<a href=\"#\" ng-i18next=\"[title]hello\">This is a link.</a>\r\n=> translates ````hello```` and sets it as the title\r\n\r\n\t<a href=\"#\" ng-i18next=\"[title]{{hello}}\">This is a link.</a>\r\n=> translates ````$scope.hello```` and sets it as the title\r\n\r\nYou can combine both, too!\r\n\r\n### Attributes + text content ###\r\n\r\n\t<a href=\"#\" ng-i18next=\"[title]hello;content\"></a>\r\n=> translates ````hello```` and sets it as the title\r\n=> translates ````content```` and sets it as the text of the link.\r\n\r\n\t<a href=\"#\" ng-i18next=\"[title]{{hello}};{{content}}\"></a>\r\n=> translates ````$scope.hello```` and sets it as the title\r\n=> translates ````$scope.content```` and sets it as the text of the link.\r\n\r\n### Attributes + HTML content ###\r\n\r\n\t<a href=\"#\" ng-i18next=\"[title]hello;[html]content\"></a>\r\n=> translates ````hello```` and sets it as the title\r\n=> translates ````content```` and compiles the HTML as the content of the link.\r\n\r\n\t<a href=\"#\" ng-i18next=\"[title]{{hello}};[html]{{content}}\"></a>\r\n=> translates ````$scope.hello```` and sets it as the title\r\n=> translates ````$scope.content```` and compiles the HTML as the content of the link.\r\n\r\n### Passing Options ###\r\nYou can also pass options:\r\n\r\n\t<p ng-i18next=\"[i18next]({lng:'de'})hello\"></p>\r\n=> translates ````hello```` in German (````de````)\r\n\r\n### Passing Options + HTML ###\r\nYou can also pass options:\r\n\r\n\t<p ng-i18next=\"[html:i18next]({lng:'de'})hello\"></p>\r\n=> translates ````hello```` in German (````de````) and compiles it to HTML code.\r\n\r\n---------\r\n\r\nFor more, see examples.\r\n\r\n---------\r\n\r\n# Contribute #\r\n\r\nTo contribute, you must have:\r\n\r\n- [Node.js](http://nodejs.org/)\r\n- [bower](http://bower.io/)\r\n\r\ninstalled.\r\n\r\nLoad all dependencies using [`npm`](https://npmjs.org/) and [`bower`](http://bower.io/):\r\n\r\n\tnpm install\r\n\tbower install\r\n\r\nBuild `ng-i18next.js` using Grunt:\r\n\r\n\tgrunt\r\n\r\n---------\r\n\r\n# Examples #\r\n\r\nYou can run the examples using:\r\n\r\n\tgrunt server\r\n\r\n_(note that you have to be in the root directory of this project)_\r\n\r\n---------\r\n\r\n# Changelog #\r\n\r\nv0.2.5\r\n- fixed some minor bugs (in filter)\r\n\r\nv0.2.4\r\n- removed unnecessary code in provider.js\r\n- fixed issue #14 where auto detection of language didn't work\r\n\r\nv0.2.3\r\n- fixed minification\r\n- not using `ngmin` anymore\r\n\r\nv0.2.2\r\n- you can now pass options to a directive\r\n- new tests and Gruntfile (now supports `grunt server`)\r\n- updated dependencies in package.json\r\n- you can now pass options to the filter\r\n\r\nv0.2.1\r\n- it is now possible to change options at runtime (and not only in `.config()`)\r\n- the dist folder was added\r\n\r\nv0.2\r\n- completly new version\r\n- `i18next` provider, directive and filter\r\n\r\nv0.1\r\n- first version\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}